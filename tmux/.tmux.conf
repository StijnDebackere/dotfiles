# ------------------------------------------------------------------------------
# Bind keys
# ------------------------------------------------------------------------------
unbind C-b
set -g prefix C-a      # prefix is C-a
bind a send-prefix     # use C-a by C-a a

bind | split-window -h # split horizontally
bind - split-window -v # split vertically

bind-key -n M-n command-prompt -p "rename window to:"  "rename-window '%%'"

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind C-a last-window   # C-a C-a switches between last active window

bind r source-file  ~/.tmux.conf \; display "Config reloaded!"

# Kill windows
unbind &
unbind C-d

bind K confirm-before -p "kill-window #W? (y/n)" kill-window

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# window movement
bind -n S-left  prev
bind -n S-right next

# in newer tmux versions swapping also requires reselecting swapped window
# see https://superuser.com/q/343572/552493#552493
if-shell "[[ `tmux -V | cut -d' ' -f2 | cut -d'.' -f1` -ge 3 ]]" \
         'bind-key -n S-C-Left swap-window -d -t -1;\
         bind-key -n S-C-Right swap-window -d -t +1'
if-shell "[[ `tmux -V | cut -d' ' -f2 | cut -d'.' -f1` -lt 3 ]]" \
         'bind-key -n S-C-Left swap-window -t -1;\
          bind-key -n S-C-Right swap-window -t +1'

# ------------------------------------------------------------------------------
# Configure tmux
# ------------------------------------------------------------------------------
# Scrollback features -> only when 1 window, split
# messes this up, but meh...
set -g history-limit 30000
set -gw terminal-overrides 'xterm*:smcup@:rmcup@'

# Start window/pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Use emacs bindings
set -g status-keys emacs
set -gw mode-keys emacs

# Set terminal to TERM
set-option -g default-terminal "screen-256color"

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Enable window titles
set -g set-titles on
# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles-string "#T : #h > #S > #W"

# don't rename windows automatically
set-option -g allow-rename off

# Automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set-window-option -g monitor-activity off
set -g bell-action none

# ------------------------------------------------------------------------------
# Set color scheme
# ------------------------------------------------------------------------------
# taken from https://github.com/samoshkin/tmux-config
# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I #W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I #W #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off | $wg_user_host | $wg_date "

# ------------------------------------------------------------------------------
# Remote session within tmux
# ------------------------------------------------------------------------------
# taken from
# https://github.com/samoshkin/tmux-config/blob/95efd543846a27cd2127496b74fd4f4da94f4a31/tmux/tmux.conf#L350
# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/dotfiles/tmux/.tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root S-down  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I #W #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off S-up \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S